/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tiba;

import POJO.UserPatient;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.concurrent.ThreadLocalRandom;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Vanessa
 */
public class Reception extends javax.swing.JFrame {
    
    public static String retext;
    public String url = Tiba.mysqlurl;
    public String pwd = Tiba.mysqlpwd;
    
    public static String idtext;
    
    ButtonGroup bg = new ButtonGroup();
    
    String gender;
    
    DefaultTableModel model;
    
    ResultSet rs;
    
    public Reception() {
        initComponents();
        recepid();
        genderChoice();
        setDate();
        findPatients();
        randomId();
        fetchData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        dateLbl = new javax.swing.JLabel();
        recepIDlabel = new javax.swing.JLabel();
        label1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        registerBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        appointmentBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        fnameTextField = new javax.swing.JTextField();
        mnameTextField = new javax.swing.JTextField();
        lnamejTextField = new javax.swing.JTextField();
        addressJTextField = new javax.swing.JTextField();
        telephoneTextField = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();
        maleRBtn = new javax.swing.JRadioButton();
        femaleRBtn = new javax.swing.JRadioButton();
        dobjTextField = new javax.swing.JTextField();
        ptTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        exitBtn = new javax.swing.JButton();
        todocButton = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 102, 102), new java.awt.Color(0, 51, 51)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("T I B A - H M S ");

        searchTextField.setText("search");
        searchTextField.setCaretColor(new java.awt.Color(0, 102, 102));
        searchTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTextFieldMouseClicked(evt);
            }
        });
        searchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldActionPerformed(evt);
            }
        });

        label1.setText("ID :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(recepIDlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(dateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(429, 429, 429))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(recepIDlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(label1)))
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        registerBtn.setText("REGISTER");
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("UPDATE");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("DELETE");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        appointmentBtn.setText("APPOINTMENT");
        appointmentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointmentBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("   PATIENT TAB");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(appointmentBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(registerBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(registerBtn)
                .addGap(18, 18, 18)
                .addComponent(updateBtn)
                .addGap(18, 18, 18)
                .addComponent(deleteBtn)
                .addGap(18, 18, 18)
                .addComponent(appointmentBtn)
                .addGap(32, 32, 32))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        fnameTextField.setText("First Name");
        fnameTextField.setToolTipText("first name");
        fnameTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fnameTextFieldMouseClicked(evt);
            }
        });

        mnameTextField.setText("Middle Name");
        mnameTextField.setToolTipText("middle name");
        mnameTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnameTextFieldMouseClicked(evt);
            }
        });

        lnamejTextField.setText("Last Name");
        lnamejTextField.setToolTipText("last name");
        lnamejTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lnamejTextFieldMouseClicked(evt);
            }
        });

        addressJTextField.setText("Address");
        addressJTextField.setToolTipText("street address");
        addressJTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addressJTextFieldMouseClicked(evt);
            }
        });

        telephoneTextField.setText("Telephone");
        telephoneTextField.setToolTipText("phone number");
        telephoneTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                telephoneTextFieldMouseClicked(evt);
            }
        });

        emailTextField.setText("Email");
        emailTextField.setToolTipText("email");
        emailTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emailTextFieldMouseClicked(evt);
            }
        });

        maleRBtn.setText("Male");

        femaleRBtn.setText("Female");

        dobjTextField.setText("dob(yy-mm-dd)");
        dobjTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dobjTextFieldMouseClicked(evt);
            }
        });

        ptTextField.setEditable(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fnameTextField)
                    .addComponent(mnameTextField)
                    .addComponent(dobjTextField)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(maleRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(femaleRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lnamejTextField)
                    .addComponent(ptTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(telephoneTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressJTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telephoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lnamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dobjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maleRBtn)
                    .addComponent(femaleRBtn))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "First Name", "Middle Name", "Last Name", "D.O.B", "Gender", "Email ", "Telephone", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(0, 102, 102));
        jTable1.setSelectionBackground(new java.awt.Color(0, 102, 102));
        jScrollPane1.setViewportView(jTable1);

        exitBtn.setText("EXIT");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        todocButton.setText("TO DOCTOR");
        todocButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todocButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(todocButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(exitBtn)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(exitBtn)
                            .addComponent(todocButton))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTextFieldMouseClicked
        // TODO add your handling code here
        searchTextField.setText("");
    }//GEN-LAST:event_searchTextFieldMouseClicked

    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldActionPerformed
        // TODO add your handling code here:
        try {
            
            Connection conn =  DriverManager.getConnection(url, "root", pwd);
            String query = "SELECT patientid, fname, mname, lname, dob, gender, email, telephone, address FROM patient where patientid=?";
            PreparedStatement pst = conn.prepareStatement(query);
            pst.setString(1, searchTextField.getText());
            rs = pst.executeQuery();
            
            while (rs.next()) {                
                ptTextField.setText(rs.getString("patientid"));
                fnameTextField.setText(rs.getString("fname"));
                mnameTextField.setText(rs.getString("mname"));
                lnamejTextField.setText(rs.getString("lname"));
                dobjTextField.setText(rs.getString("dob"));
                String gend = rs.getString("gender");
                    if (gend.equals("female")) {
                        maleRBtn.setSelected(false);
                        femaleRBtn.setSelected(true);
                    }  else {
                        maleRBtn.setSelected(true);
                        femaleRBtn.setSelected(false);
                    }
                emailTextField.setText(rs.getString("email"));
                telephoneTextField.setText(rs.getString("telephone"));
                addressJTextField.setText(rs.getString("address"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_searchTextFieldActionPerformed

    private void emailTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailTextFieldMouseClicked
        // TODO add your handling code here:
        emailTextField.setText("");
    }//GEN-LAST:event_emailTextFieldMouseClicked

    private void telephoneTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_telephoneTextFieldMouseClicked
        // TODO add your handling code here:
        telephoneTextField.setText("");
    }//GEN-LAST:event_telephoneTextFieldMouseClicked

    private void addressJTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addressJTextFieldMouseClicked
        // TODO add your handling code here:
        addressJTextField.setText("");
    }//GEN-LAST:event_addressJTextFieldMouseClicked

    private void lnamejTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lnamejTextFieldMouseClicked
        // TODO add your handling code here:
        lnamejTextField.setText("");
    }//GEN-LAST:event_lnamejTextFieldMouseClicked

    private void mnameTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnameTextFieldMouseClicked
        // TODO add your handling code here:
        mnameTextField.setText("");
    }//GEN-LAST:event_mnameTextFieldMouseClicked

    private void fnameTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fnameTextFieldMouseClicked
        // TODO add your handling code here:
        fnameTextField.setText("");
    }//GEN-LAST:event_fnameTextFieldMouseClicked

    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        // TODO add your handling code here:
       
        if (maleRBtn.isSelected()) {
            gender = "male";
        } else if (femaleRBtn.isSelected()) {
            gender = "female";
        }    
        
            if (ptTextField.getText().isEmpty() || fnameTextField.getText().isEmpty() || lnamejTextField.getText().isEmpty() || 
                    dobjTextField.getText().isEmpty() || bg.getSelection()== null || emailTextField.getText().isEmpty() ||
                    telephoneTextField.getText().isEmpty() || addressJTextField.getText().isEmpty()) {
                
                JOptionPane.showMessageDialog(null, "Kindly fill the empty fields!");
                
            } else { 
                
                try {
                    
                    Connection conn = DriverManager.getConnection(url, "root", pwd);
                    String query = "INSERT INTO patient (patientid, fname, mname, lname, dob, gender, email, telephone, address, date)" 
                          + "VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                    PreparedStatement ps = conn.prepareStatement(query);
                    ps.setString(1, ptTextField.getText());
                    ps.setString(2, fnameTextField.getText());
                    ps.setString(3, mnameTextField.getText());
                    ps.setString(4, lnamejTextField.getText());
                    ps.setString(5, dobjTextField.getText());
                    ps.setString(6, gender);
                    ps.setString(7, emailTextField.getText());
                    ps.setString(8, telephoneTextField.getText());
                    ps.setString(9, addressJTextField.getText());
                    ps.setString(10, dateLbl.getText());
                
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Patient : " + ptTextField.getText() + " ADDED.");
                    
                    randomId();
                    
                    fetchData();
                
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }
    }//GEN-LAST:event_registerBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        try {
            
            Connection conn = DriverManager.getConnection(url, "root", pwd);
            String query = "UPDATE patient SET fname=?, mname=?, lname=?, dob=?, gender=?, email=?, telephone=?, address=?, date=? WHERE patientid=?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, fnameTextField.getText());
            ps.setString(2, mnameTextField.getText());
            ps.setString(3, lnamejTextField.getText());
            ps.setString(4, dobjTextField.getText());
            ps.setString(5, gender);
            ps.setString(6, emailTextField.getText());
            ps.setString(7, telephoneTextField.getText());
            ps.setString(8, addressJTextField.getText());
            ps.setString(9, dateLbl.getText());
            ps.executeUpdate();
            
            JOptionPane.showMessageDialog(null, ptTextField.getText() + " RECORD UPDATED.");
        
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        int option = JOptionPane.showConfirmDialog(null, "Delete PatientID : " + ptTextField.getText() + " ?", "DELETE", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            try {
                Connection conn = DriverManager.getConnection(url, "root", pwd);
                String query = "DELETE FROM patient WHERE patientid =?";
                PreparedStatement ps = conn.prepareStatement(query);
                ps.setString(1, ptTextField.getText());
                ps.executeUpdate();
                
                JOptionPane.showMessageDialog(null, ptTextField.getText() + " DELETED FROM SYSTEM.");
            } catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }else {
//            BJHGJHSAKD.HAS.JCK.ASCNSKJ
        }
        
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void appointmentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appointmentBtnActionPerformed
        // TODO add your handling code here:
        String pid = ptTextField.getText();
        String[] ptitd = new String[1];
        ptitd[0] = pid;
        Appointment.main(ptitd);
        
        new Appointment().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_appointmentBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
        new Home().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_exitBtnActionPerformed

    private void todocButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todocButtonActionPerformed
        // TODO add your handling code here:
        try {
            Connection conn = DriverManager.getConnection(url, "root", pwd);
            String query = "INSERT INTO recepdocq (patientid, fname, mname, lname, date)" 
                          + "VALUES(?, ?, ?, ?, ?)";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, ptTextField.getText());
            ps.setString(2, fnameTextField.getText());
            ps.setString(3, mnameTextField.getText());
            ps.setString(4, lnamejTextField.getText());
            ps.setString(5, dateLbl.getText());
                
            ps.executeUpdate();
            
            consultBill();
            JOptionPane.showMessageDialog(null, ptTextField.getText() + " QUEUE FOR DR.");
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_todocButtonActionPerformed

    private void dobjTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dobjTextFieldMouseClicked
        // TODO add your handling code here:
        dobjTextField.setText("");
    }//GEN-LAST:event_dobjTextFieldMouseClicked

    public static void main(String args[]) {
        
        retext = args[0];
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reception().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressJTextField;
    private javax.swing.JButton appointmentBtn;
    private javax.swing.JLabel dateLbl;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField dobjTextField;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JButton exitBtn;
    private javax.swing.JRadioButton femaleRBtn;
    private javax.swing.JTextField fnameTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel label1;
    private javax.swing.JTextField lnamejTextField;
    private javax.swing.JRadioButton maleRBtn;
    private javax.swing.JTextField mnameTextField;
    private javax.swing.JTextField ptTextField;
    private javax.swing.JLabel recepIDlabel;
    private javax.swing.JButton registerBtn;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JTextField telephoneTextField;
    private javax.swing.JButton todocButton;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables

    private void recepid() {
        recepIDlabel.setText(retext);
    }
    
    private void randomId() {
        int r = ThreadLocalRandom.current().nextInt(10000);
        ptTextField.setText(String.valueOf(r));
    }

    private void genderChoice() {
        
        bg.add(maleRBtn);
        bg.add(femaleRBtn);
        
        if (maleRBtn.isSelected()) {
            gender = "male";
        } else if (femaleRBtn.isSelected()) {
            gender = "female";
        }
        
    }

    private void setDate() {
        java.time.LocalDate date = LocalDate.now();
        dateLbl.setText(date.toString());
    }

    public ArrayList<UserPatient> ListUsers(String ValToSearch){
       
        ArrayList<UserPatient> patientsList = new ArrayList<UserPatient>();
        Statement statement;
        ResultSet resultSet;
       
        try {
            
            Connection conn = DriverManager.getConnection(url, "root", pwd);
            statement = conn.createStatement();
            String query = " SELECT * FROM patient WHERE CONCAT ('patientid', 'fname', 'mname', 'lname', 'dob', 'gender', 'email', 'telephone', 'address', 'date') LIKE '%\"+ValToSearch+\"%' ";
            resultSet = statement.executeQuery(query);
            
            UserPatient upatient;
            while (resultSet.next()) {
                upatient = new UserPatient(resultSet.getInt("patientid"), 
                resultSet.getString("fname"), 
                resultSet.getString("mname"),
                resultSet.getString("lname"),  
                resultSet.getDate("dob"),
                resultSet.getString("gender"), 
                resultSet.getString("email"),
                resultSet.getInt("telephone"),
                resultSet.getString("address"), 
                resultSet.getDate("date"));
                patientsList.add(upatient);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        
        return patientsList;
        
    }
    
    private void findPatients() {
        ArrayList<UserPatient> patients = ListUsers(searchTextField.getText());
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.setColumnIdentifiers(new Object[] {"patientid", "fname", "mname", "lname", "dob", "gender", "email", "telephone", "address", "date"});
        Object row[] = new Object[10];
        
        for(int i = 0; i < patients.size(); i++)
        {
            row[0] = patients.get(i).getId();
            row[1] = patients.get(i).getFirstnp();
            row[2] = patients.get(i).getMiddlenp();
            row[3] = patients.get(i).getLastnp();
            row[4] = patients.get(i).getDobp();
            row[4] = patients.get(i).getDobp();
            row[5] = patients.get(i).getGenderp();
            row[6] = patients.get(i).getEmailp();
            row[7] = patients.get(i).getTelephonep();
            row[8] = patients.get(i).getAddressp();
            row[9] = patients.get(i).getDatep();
            dtm.addRow(row);
        }
        jTable1.setModel(dtm);
       
    }

    private void fetchData() {

        model = (DefaultTableModel)jTable1.getModel();
        
        try {
            ResultSet rs = null;
            Connection conn = DriverManager.getConnection(url, "root", pwd);
            String query = "SELECT * FROM patient";
            PreparedStatement pst = conn.prepareStatement(query);
           
            rs = pst.executeQuery();
            
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void consultBill() {
        String yourBill = "300";
        try {
            Connection conn = DriverManager.getConnection(url, "root", pwd);
            String query = "INSERT INTO billing (patientid, consultationcost, date)" 
                          + "VALUES(?, ?, ?)";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, ptTextField.getText());
            ps.setString(2, yourBill);
            ps.setString(3, dateLbl.getText());
                
            ps.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "printing receipt...");
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }

}
