/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tiba.LoginUI;

import java.awt.Color;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import tiba.Doctor;
import tiba.Home;
import tiba.Lab;
import tiba.Pharmacy;
import tiba.Reception;
import tiba.Tiba;

/**
 *
 * @author Vanessa
 */
public class LoginStaff extends javax.swing.JFrame {
    
    public static String identtext;
    String url = Tiba.mysqlurl;
    String pwd = Tiba.mysqlpwd;
    
    ResultSet resultSet = null;
        
    public String receptionist = "receptionist", doctor = "doctor", lab = "lab assistant", pharmacist = "phamarcist";

    public LoginStaff() {
        initComponents();
        
        labelTextInfo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        usernametxt = new javax.swing.JTextField();
        loginBtn = new javax.swing.JButton();
        passwordtxt = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        userLabel = new javax.swing.JLabel();
        showpassCbox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("T I B A - H M S");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        usernametxt.setToolTipText("staff ID");
        usernametxt.setName(""); // NOI18N
        usernametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernametxtActionPerformed(evt);
            }
        });

        loginBtn.setText("LOGIN");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        passwordtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordtxtActionPerformed(evt);
            }
        });

        jLabel2.setText("Staff ID");

        jLabel3.setText("Password");

        backBtn.setText("BACK");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        userLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        userLabel.setText("jLabel4");

        showpassCbox.setBackground(new java.awt.Color(255, 255, 255));
        showpassCbox.setText(" Show Password");
        showpassCbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showpassCboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(userLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)))
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loginBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordtxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernametxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showpassCbox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(usernametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addComponent(userLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(showpassCbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginBtn)
                    .addComponent(backBtn))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usernametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernametxtActionPerformed

    private void passwordtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordtxtActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new Home().setVisible(true);
    }//GEN-LAST:event_backBtnActionPerformed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        
        if (identtext == "RECEPTIONIST") {
            try {
                Connection conn = DriverManager.getConnection(url , "root", pwd);
                String query = "SELECT * FROM reception WHERE receptionid=?";
                PreparedStatement ps = conn.prepareStatement(query);
                ps.setString(1, usernametxt.getText());
                ResultSet resultSet = ps.executeQuery();
           
                if (resultSet.next()) {
                    userLabel.setText("KARIBU");
                    userLabel.setForeground(Color.green);
                    
                    String recinfo[] = new String[1];
                    recinfo[0] = usernametxt.getText();
                    Reception.main(recinfo);
                
                    this.dispose();
                    new Reception().setVisible(true);
                } else {
                    userLabel.setText("ERROR!");
                    userLabel.setForeground(Color.red);
                    usernametxt.setText("");
                    passwordtxt.setText("");
                }
            } catch (SQLException | HeadlessException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        } else if (identtext == "DOCTOR") {
            try {
                Connection conn = DriverManager.getConnection(url , "root", pwd);
                String query = "SELECT * FROM doctor WHERE doctorid=?";
                PreparedStatement ps = conn.prepareStatement(query);
                ps.setString(1, usernametxt.getText());
                ResultSet resultSet = ps.executeQuery();
               
                if (resultSet.next()) {
                    userLabel.setText("KARIBU");
                    userLabel.setForeground(Color.green);
                    
                    String docinfo[] = new String[1];
                    docinfo[0] = usernametxt.getText();
                    Doctor.main(docinfo);
                
                    this.dispose();
                    new Doctor().setVisible(true);
            } else {
                    userLabel.setText("ERROR!");
                    userLabel.setForeground(Color.red);
                    usernametxt.setText("");
                    passwordtxt.setText("");
                }
                    
            } catch (SQLException | HeadlessException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        } else if (identtext == "LAB") {
            try {
                Connection conn = DriverManager.getConnection(url , "root", pwd);
                String query = "SELECT * FROM lab WHERE labid=?";
                PreparedStatement ps = conn.prepareStatement(query);
                ps.setString(1, usernametxt.getText());
                ResultSet resultSet = ps.executeQuery();
           
                if (resultSet.next()) {
                    userLabel.setText("KARIBU");
                    userLabel.setForeground(Color.green);
                    
                    String labinfo[] = new String[1];
                    labinfo[0] = usernametxt.getText();
                    Lab.main(labinfo);
                
                    this.dispose();
                    new Lab().setVisible(true);
            } else {
                    userLabel.setText("ERROR!");
                    userLabel.setForeground(Color.red);
                    usernametxt.setText("");
                    passwordtxt.setText("");
                }
                    
            } catch (SQLException | HeadlessException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        } else if (identtext == "PHARMACY") {
            try {
                Connection conn = DriverManager.getConnection(url , "root", pwd);
                String query = "SELECT * FROM pharmacy WHERE pharmacyid=?";
                PreparedStatement ps = conn.prepareStatement(query);
                ps.setString(1, usernametxt.getText());
                ResultSet resultSet = ps.executeQuery();
           
                if (resultSet.next()) {
                    userLabel.setText("KARIBU");
                    userLabel.setForeground(Color.green);
                
                    String phamlinfo[] = new String[1];
                    phamlinfo[0] = usernametxt.getText();
                    Pharmacy.main(phamlinfo);
                
                    this.dispose();
                    new Pharmacy().setVisible(true);
            } else {
                    userLabel.setText("ERROR!");
                    userLabel.setForeground(Color.red);
                    usernametxt.setText("");
                    passwordtxt.setText("");
                }
                    
            } catch (SQLException | HeadlessException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
        
    }//GEN-LAST:event_loginBtnActionPerformed

    private void showpassCboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showpassCboxActionPerformed
        // TODO add your handling code here:
        if (showpassCbox.isSelected()) {
            passwordtxt.setEchoChar((char)0);
        } else {
            passwordtxt.setEchoChar('*');
        }
    }//GEN-LAST:event_showpassCboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        identtext = args[0];
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginStaff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPasswordField passwordtxt;
    private javax.swing.JCheckBox showpassCbox;
    private javax.swing.JLabel userLabel;
    private javax.swing.JTextField usernametxt;
    // End of variables declaration//GEN-END:variables

    private void labelTextInfo() {
        if (identtext == "RECEPTIONIST") {
            userLabel.setText(receptionist);
        } else if(identtext == "DOCTOR"){
            userLabel.setText(doctor);
        } else if(identtext == "LAB"){
            userLabel.setText(lab);
        } else if(identtext == "PHARMACY"){
            userLabel.setText(pharmacist);
        }
    }
}
